[{"/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/index.js":"1","/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/store.js":"2","/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/App.js":"3","/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/components/mainpage.js":"4","/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/components/nav.js":"5","/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/components/main/shiftsMain.js":"6","/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/components/Summary/summary.js":"7","/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/components/main/shiftsDetailsPage.js":"8","/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/components/main/shiftsIndexPage.js":"9","/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/functionhelpers.js":"10","/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/components/Summary/summaryMetrics.js":"11","/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/components/ShiftIndex/shiftsTable.js":"12","/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/components/ShiftDetails/shiftDetail.js":"13","/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/components/ShiftDetails/shiftdisplay.js":"14","/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/components/ShiftDetails/shiftCard.js":"15","/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/components/ShiftDetails/imageUpload.js":"16","/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/components/ShiftDetails/shiftCarousel.js":"17","/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/components/ShiftDetails/shiftDialogForm.js":"18"},{"size":682,"mtime":1608791446026,"results":"19","hashOfConfig":"20"},{"size":1461,"mtime":1607678529327,"results":"21","hashOfConfig":"20"},{"size":811,"mtime":1607070573994,"results":"22","hashOfConfig":"20"},{"size":1164,"mtime":1608792176729,"results":"23","hashOfConfig":"20"},{"size":1027,"mtime":1607070573994,"results":"24","hashOfConfig":"20"},{"size":7848,"mtime":1608676552546,"results":"25","hashOfConfig":"20"},{"size":2274,"mtime":1608791446026,"results":"26","hashOfConfig":"20"},{"size":684,"mtime":1608791446026,"results":"27","hashOfConfig":"20"},{"size":2011,"mtime":1608791446026,"results":"28","hashOfConfig":"20"},{"size":1449,"mtime":1607677083492,"results":"29","hashOfConfig":"20"},{"size":1519,"mtime":1601150157131,"results":"30","hashOfConfig":"20"},{"size":4613,"mtime":1608791446026,"results":"31","hashOfConfig":"20"},{"size":3082,"mtime":1608791446026,"results":"32","hashOfConfig":"20"},{"size":8442,"mtime":1608791446026,"results":"33","hashOfConfig":"20"},{"size":1300,"mtime":1608791446026,"results":"34","hashOfConfig":"20"},{"size":2753,"mtime":1608791446026,"results":"35","hashOfConfig":"20"},{"size":3078,"mtime":1608791446030,"results":"36","hashOfConfig":"20"},{"size":4371,"mtime":1608791446026,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"uzu8ha",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},"/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/index.js",[],["81","82"],"/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/store.js",[],"/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/App.js",[],"/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/components/mainpage.js",[],"/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/components/nav.js",[],"/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/components/main/shiftsMain.js",[],"/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/components/Summary/summary.js",["83","84","85"],"import React, {useEffect, useState, } from 'react'\nimport { searchResults, keyShifts } from \"../../functionhelpers\";\nimport styled from 'styled-components'\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\nimport { ShiftsPage } from '../main/shiftsMain';\nimport {Metrics} from './summaryMetrics'\n\n\nconst Container = styled.div`\n  /* margin-top: 100px; */\n  display: grid;\n  grid-template-areas:\n    \". header  header .\"\n    \". shifts  rangeSummary .\";\n    grid-template-columns: 10% 1fr 1fr 10%;\n`;\n\n\nexport const Summary = ()=>{\n    //display blanks update values after entering in the starting and ending dates\n\n    const [summaryState, setSummaryState] = useState()\n    const [startDate, setStartDate] = useState({start: \"\"})\n    const [endDate, setEndDate] = useState({end: \"\"})\n    const [displayMetrics, setDisplayMetrics] = useState(true)\n    \n    const search = async () => {\n      if(startDate && endDate) {\n        let data = await searchResults(startDate,endDate)\n        setSummaryState(data.data)\n      }\n    }\n\n    \n   \n\n    const hideMetrics = () => {\n      setDisplayMetrics(false)\n    }\n\n\n    let keyedShifts = summaryState ? keyShifts(summaryState.shifts) : \"\"\n    \n    let metrics = summaryState && displayMetrics ? <Metrics shiftTotals={summaryState.shiftTotals} /> : \"\"\n    let shifts = summaryState ? (\n      <ShiftsPage\n        shifts={keyedShifts}\n        location={true}\n        // handleClose={handleClose}\n        hideMetrics={hideMetrics}\n      />\n    ) : (\n      \"\"\n    );\n\n\n    return (\n      <Container>\n        <div style={{ gridArea: \"header\" }}>\n          {/* <DatePicker\n            id=\"start\"\n            onChange={(date) => setStartDate(date)}\n            selected={Date.parse(startDate)}\n          />\n\n          <DatePicker\n            id=\"end\"\n            onChange={(date) => setEndDate(date)}\n            selected={Date.parse(endDate)}\n          /> */}\n          <button onClick={search}>Get Shifts</button>\n        </div>\n      \n        <div\n          \n          style={{ gridArea: \"shifts\" }}\n        >\n          {shifts}\n        </div>\n        <div style={{ gridArea: \"rangeSummary\", marginTop: \"55px\" }}>\n          <div>{metrics}</div>\n        </div>\n      </Container>\n    );\n}","/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/components/main/shiftsDetailsPage.js",[],"/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/components/main/shiftsIndexPage.js",[],"/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/functionhelpers.js",[],"/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/components/Summary/summaryMetrics.js",[],"/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/components/ShiftIndex/shiftsTable.js",[],"/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/components/ShiftDetails/shiftDetail.js",[],"/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/components/ShiftDetails/shiftdisplay.js",["86"],"import React, {useState, useEffect} from \"react\";\n\nimport styled from \"styled-components\";\nimport { converDateString } from \"../../functionhelpers\";\nimport {SimpleCard} from './shiftCard'\n\nconst Container = styled.div`\n  margin: 50px auto;\n  \n  display: grid;\n  row-gap: 5px;\n  grid-template-areas:\n    \" cards \"\n    \" pics\";\n  grid-template-rows: auto;\n`;\n\n\nconst CardsContainer = styled.div`\n  grid-area: ${(props) => props.gridArea};\n  display: flex;\n\n`\nconst ImagesContainer = styled.div`\n  grid-area: ${(props) => props.gridArea};\n  display: flex;\n  justify-content: center;\n`\n\nconst DisplayImg = styled.img`\n  width: 200px;\n  height: 200px;\n \n  /* grid-row-end: span 2; */\n  margin-right: 20px;\n`;\n\n\nexport const ShiftDisplay = ({ shiftObj }) => {\n  const [miles, setMiles] = useState(0)\n  const [hours, setHours] = useState(0)\n\n  const {\n      startDateTime,\n      ttlMiles,\n      tips = 0,\n      ttlComp = 0,\n      startingUrl,\n      endingUrl,\n      shiftDuration,\n    } = shiftObj;\n\n\n  useEffect(()=> {\n     \n    \n    setMiles(ttlMiles)\n    setHours(shiftDuration)\n  }, [ttlMiles, shiftDuration])\n\n    // console.log(`shiftObj: ${shiftObj}`)\n\n    return (\n      <Container>\n        \n        <CardsContainer\n          gridArea={\"cards\"}\n        >\n\n        <SimpleCard\n          data={converDateString(startDateTime, true)}\n          text={\"Shift Start\"}\n          />\n        <SimpleCard\n          data={miles}\n          text={\"Miles Driven\"}\n          />\n        <SimpleCard\n          data={hours}\n          text={\"Hours Worked\"}\n          />\n        <SimpleCard\n          data={tips}\n          text={\"Tips\"}\n          />\n        <SimpleCard\n          data={ttlComp}\n          text={\"Total Earnings\"}\n          />\n          </CardsContainer>\n          <ImagesContainer\n            gridArea={\"pics\"}\n          >\n\n          <DisplayImg\n          \n          \n          src={\n            startingUrl ||\n            \"https://via.placeholder.com/200.png?text=Add+Starting+Image\"\n          }\n          alt=\"Starting Mileage Pic\"\n          />\n        <DisplayImg\n          \n          \n          src={\n            endingUrl ||\n            \"https://via.placeholder.com/200.png?text=Add+Ending+Image\"\n          }\n          alt=\"Ending Mileage Pic\"\n          />\n          </ImagesContainer>\n       \n      </Container>\n    );\n  } \n\n/**\n *  {/* <DisplayMiles\n          gridArea={\"startM\"}\n          >{`Starting Miles: ${startMiles}`}</DisplayMiles>\n          <DisplayMiles\n          gridArea={\"endM\"}\n          >{`Ending Miles: ${endMiles}`}</DisplayMiles>\n          \n          <DisplayItem gridArea={\"startTimeL\"}>\n          <DispItemHead>\n          Start Time\n          <DispItemVal>{converDateString(startDateTime)}</DispItemVal>\n          </DispItemHead>\n        </DisplayItem>\n\n        <DisplayItem gridArea={\"endTimeL\"}>\n          <DispItemHead>\n            End Time\n            <DispItemVal>\n              {converDateString(endDateTime) || \"Shift Open\"}\n            </DispItemVal>\n          </DispItemHead>\n        </DisplayItem>\n\n        <DisplayItem gridArea={\"ttlM\"}>\n          <DispItemHead>\n            Total Miles\n            <DispItemVal>{ttlMiles}</DispItemVal>\n          </DispItemHead>\n        </DisplayItem>\n\n        <DisplayItem gridArea={\"ttlHours\"}>\n          <DispItemHead>\n            Shift Duration(hrs)\n            <DispItemVal>{shiftDuration}</DispItemVal>\n          </DispItemHead>\n        </DisplayItem>\n        <DisplayItem gridArea={\"ttltips\"}>\n          <DispItemHead>\n            Tips\n            <DispItemVal>{tips}</DispItemVal>\n          </DispItemHead>\n        </DisplayItem>\n        <DisplayItem gridArea={\"comp\"}>\n          <DispItemHead>\n            Earnings\n            <DispItemVal>{ttlComp}</DispItemVal>\n          </DispItemHead>\n        </DisplayItem>\n        <DisplayItem gridArea={\"closed\"}>\n          <DispItemHead style={{ marginTop: \"100px\" }}>\n            Shift Status\n            <DispItemVal bgcolor={closed}>\n              {closed ? \"Closed\" : \"Open\"}\n            </DispItemVal>\n          </DispItemHead>\n        </DisplayItem> \n\n        \n * \n * \n * \n * \n */\n\n//  const DisplayMiles = styled.div`\n//   margin: auto;\n//   text-align: center;\n//   grid-area: ${(props) => props.gridArea};\n// `;\n// const DispItemHead = styled.div`\n//   background-color: lightgreen;\n//   vertical-align: center;\n//   border-radius: 20px;\n//   border: 0.5px solid grey;\n//   margin: auto;\n//   border-bottom: none;\n//   border-left: none;\n//   border-right: none;\n// `;\n\n// const DispItemVal = styled.div`\n//   /* margin-top: 5px; */\n//   background-color: white;\n//   /* border-radius: 20px;\n//   border: 0.25px solid grey; */\n//   background-color: ${(props) => (props.bgcolor ? \"#EB3633\" : \"white\")};\n//   border: 1px solid grey;\n//   z-index: 1;\n// `;\n/* \"startPic  startTimeL endTimeL ttlHours\"\n    \".  startTimeL endTimeL ttlHours\"\n    \"startM   . . . \"\n    \"endPic    ttlM ttltips comp\"\n    \".    ttlM ttltips comp\"\n    \"endM      .  closed .\"\n    ; */\n    /* \"startPic  startTimeL endTimeL ttlHours\"\n    \"startM    ttlM ttltips comp\"\n    \".   . . . \"\n    \"endPic    . closed .\"\n    \"endM      .  . .\" */\n\n    // const DisplayItem = styled.div`\n//   margin: 0px auto;\n//   margin-right: 20px;\n//   width: 150px;\n//   text-align: center;\n//   grid-area: ${(props) => props.gridArea};\n//   box-sizing: border-box;\n\n//   overflow: hidden;\n// `;","/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/components/ShiftDetails/shiftCard.js",["87","88"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { FormHelperText } from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  root: {\n    \n    textAlign: \"center\",\n    height: \"75px\", \n    margin: 5,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 10,\n    textAlign: \"center\"\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport const  SimpleCard = ({data, text}) => {\n  const classes = useStyles();\n  // const bull = <span className={classes.bullet}>•</span>;\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          {`${data}`}\n        </Typography>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n         {text}\n        </Typography>\n        \n      </CardContent>\n      <CardActions>\n        \n      </CardActions>\n    </Card>\n  );\n}","/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/components/ShiftDetails/imageUpload.js",["89"],"import React, {useState, useRef} from 'react'\n\nimport styled from 'styled-components'\nimport {uploadPhoto} from '../../functionhelpers'\n\nconst UploadButton = styled.button`\n  width: 125px;\n  height: 25px;\n  border-radius: 5px;\n  /* background-color: #A3F7B5; */\n  background-color: ${(props) => (props.disabled ? \"lightgrey\" : \"#A3F7B5\")};\n  text-align: center;\n  /* line-height: 25px; */\n  cursor: ${(props) => (props.disabled ? \"\" : \"pointer\")};\n  margin: 0px 10px;\n  border: none;\n  font-size: 12pt;\n`;\n\nconst StyledLabel = styled.label`\n  font-size: 14pt;\n  font-weight: bold;\n  color: darkslategrey;\n\n`\n\n\nexport const ImageUploader = ({shiftId, dispatch}) =>{\n    let initialState = { shiftId: shiftId, pictureType: \"\", file: null };\n    const [state, updateState] = useState(initialState)\n    const myRef = useRef()\n\n    const disabled = state.photoUrl ? false: true\n\n     const handleFile = (e) => {\n       // const file = e.currentTarget.files[0];\n       const file = e.target.files[0];\n       console.log(e.target)\n       const fileReader = new FileReader();\n       fileReader.onloadend = () => {\n\n         updateState(prevState =>\n           Object.assign({}, prevState, {\n             file: file,\n             photoUrl: fileReader.result,\n           })\n         );\n       };\n       if (file) {\n         fileReader.readAsDataURL(file);\n       }\n     };\n\n     const handleSubmit = (e) => {\n       e.preventDefault();\n\n       const formData = new FormData();\n       formData.append(\"file\", state.file, state.file.name);\n       formData.append(\"shiftId\", shiftId);\n       formData.append(\"pictureType\", state.pictureType);\n       // formData.append(\"profilePrimary\", this.state.checked)\n       uploadPhoto(formData).then((shift) => dispatch({type: \"upload\", payload: shift.data}) \n          \n         ).then(()=> updateState(initialState))\n       \n     };\n\n\n\n     const handleSelect = (e) =>{\n         e.preventDefault()\n         e.persist()\n         \n         updateState(prevState => Object.assign({}, prevState, {pictureType: e.target.value}))\n     }\n\n     const handleCancel = e => {\n         updateState({ file: null, pictureType: \"\" });\n     }\n\n     return (\n       <div\n         style={{\n           margin: \"0px auto\",\n           display: \"flex\",\n           justifyContent: \"center\",\n         }}\n       >\n         <StyledLabel>\n           {\" \"}\n           Upload Mileage Photos:\n           <input\n             ref={myRef}\n             style={{ color: \"white\", display: \"none\" }}\n             type=\"file\"\n             name=\"file\"\n             id=\"file\"\n             onChange={(e) => handleFile(e)}\n           />\n         </StyledLabel>\n         <UploadButton onClick={() => myRef.current.click()}>\n           Select File\n         </UploadButton>\n         <select style={{textAlign: \"center\"}}\n           onChange={(e) => handleSelect(e)}\n           defaultValue={{ label: \"Select Image Type\", value: null }}\n         >\n           <option>Select Image Type</option>\n           <option value=\"startingUrl\">Beginning Miles</option>\n           <option value=\"endingUrl\">Ending Miles</option>\n         </select>\n         <UploadButton disabled={disabled} onClick={(e) => handleSubmit(e)}>\n           Upload{\" \"}\n         </UploadButton>\n       </div>\n     );\n\n\n}","/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/components/ShiftDetails/shiftCarousel.js",["90"],"import React from 'react'\nimport {ShiftDetail} from './shiftDetail'\nimport Grid from '@material-ui/core/Grid'\nimport styled from 'styled-components'\n\nconst SelectorButton = styled.div`\n  color: blue;\n  cursor: pointer;\n  /* height: 80vh; */\n  \n  margin: auto;\n  /* line-height: 80vh; */\n  text-align: center;\n  align-items: center; \n  font-size: 1.5rem;\n  &:hover {\n    background-color: #f0f8fa;\n  }\n`;\n\nconst Closer = styled.div`\n  color: black;\n  cursor: pointer;\n  height: 20px;\n  \n  text-align: right;\n  line-height: 20px;\n  &:hover {\n    background-color: #f0f8fa;\n  }\n`;\n\n\n\n\nexport const ShiftCarousel = ({selectedShiftIndex, setSelectedShift, shiftKeys})=> {\n\nconst transition = (direction, id) => {\n  let index = shiftKeys.indexOf(id)\n  if (direction === \"right\" && index < shiftKeys.length - 1) setSelectedShift(shiftKeys[index + 1]) \n  if (direction ===\"left\" && index > 0 ) setSelectedShift(shiftKeys[index - 1])\n     \n}\n       /**\n        * Add a grid container\n        * layout the cards for shift highlights\n        * space for shift detail \n        */\n\n    return (\n\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs={12} >\n\n                <Closer onClick={() => setSelectedShift(null)}>\n                {\" \"}\n                <i\n                  className=\"fas fa-reply\"\n                 \n                  >\n                  {\" \"}\n                </i>\n                Shifts\n              </Closer>\n        </Grid>\n          \n        <Grid item xs={1}>\n              <SelectorButton\n                onClick={() => transition(\"left\", selectedShiftIndex)}\n                >\n                <i className=\"fas fa-angle-left\"></i>\n              </SelectorButton>\n        </Grid>\n\n        <Grid item xs={10}>\n              <ShiftDetail\n                _id={selectedShiftIndex}\n                setSelectedShift={setSelectedShift}\n              />\n        </Grid>\n\n        <Grid item xs={1}>\n\n            <SelectorButton\n              onClick={() => transition(\"right\", selectedShiftIndex)}\n              >\n              <i className=\"fas fa-angle-right\"></i>\n            </SelectorButton>\n        </Grid>\n        \n      </Grid>\n    )\n\n\n\n\n}\n\n{/* <>\n        <SelectorButton\n          gridArea={\"navLeft\"}\n          onClick={() => transition(\"left\", selectedShiftIndex)}\n        >\n          <i className=\"fas fa-angle-left\"></i>\n        </SelectorButton>\n\n        <DataContainer gridArea={\"data\"}>\n          <ShiftDetail\n            _id={selectedShiftIndex}\n            setSelectedShift={setSelectedShift}\n          />\n        </DataContainer>\n        <SelectorButton\n          gridArea={\"navRight\"}\n          onClick={() => transition(\"right\", selectedShiftIndex)}\n        >\n          <i className=\"fas fa-angle-right\"></i>\n        </SelectorButton>\n        <Closer gridArea={\"closer\"} onClick={() => setSelectedShift(null)}>\n          {\" \"}\n          <i\n            className=\"fas fa-reply\"\n            style={{ lineHeight: \"20px\", marginRight: \"2px\" }}\n          >\n            {\" \"}\n          </i>\n          Shifts\n        </Closer>\n        </> */}","/home/sheezi/Documents/Projects/eaze_tracker/frontend/src/components/ShiftDetails/shiftDialogForm.js",["91","92"],"import React, {useState, useEffect} from 'react'\nimport { postShiftAPI, closeShiftAPI } from \"../../functionhelpers\";\nimport {Grid, Button, makeStyles, TextField} from '@material-ui/core/'\nimport { DateTimePicker } from \"@material-ui/pickers\";\n\n\nconst useStyles = makeStyles({\n  container: {\n      alignItems: \"center\"\n  } , \n\n  buttons: {margin: \"5px\"\n}\n})\n\nexport const ShiftEditor = ({ shiftObj, shiftId, dispatch, close }) => {\n  const [shift, updateShift] = useState(shiftObj);\n  const [status, updateStatus] = useState(false);\n  const [startTime, updateStartTime] = useState(shiftObj.startDateTime);\n  const [endTime, updateEndTime] = useState(shiftObj.endDateTime);\n\n  useEffect(() => {\n    updateShift(shiftObj);\n    updateStartTime(shiftObj.startDateTime);\n    updateEndTime(shiftObj.endDateTime);\n  }, [shiftObj]);\n\n  const handleChange = (e) => {\n    let newState = { ...shift, [e.target.name]: e.target.value };\n    return updateShift(newState);\n  };\n  // update status, call timeout, then udpate status again\n  // set status to an empty string, then update status to the message to user, then revert\n  const postShift = async (shiftId, shift) => {\n    postShiftAPI(shiftId, shift)\n      .then((res) => dispatch({ type: \"upload\", payload: res.data }))\n      .catch((err) => console.log(`error: ${err}`));\n  };\n\n  const postUpdate = (shiftId, shift) => {\n    shift.startDateTime = Date.parse(startTime);\n    shift.endDateTime = Date.parse(endTime);\n    //console.log(shift);\n    postShift(shiftId, shift).then(() => {\n        updateStatus(true)\n        close()\n\n    });\n  };\n\n  // const closeShift = (shiftId, shift) => {\n  //   closeShiftAPI(shiftId, shift)\n  //     .then((res) => dispatch({ type: \"upload\", payload: res.data }))\n  //     .catch((err) => console.log(`error: ${err}`));\n  // };\n\n  const classes = useStyles()\n\n  let disabled = shift.closed ? true : false;\n  // let displayUpdate = status ? \"Operation Successful\" : null\n\n  return (\n    <Grid className={classes.container} container  spacing=\"2\">\n        \n        \n        <Grid item  xs={12}>\n\n        \n          <DateTimePicker\n            label=\"Start Time\"\n            \n            value={startTime}\n            onChange={updateStartTime}/>\n          \n          \n        </Grid>\n        <Grid item  xs={12}>\n\n        \n          <DateTimePicker\n            label=\"End Time\"\n            \n            value={endTime}\n            onChange={updateEndTime}/>\n          \n          \n        </Grid>\n        <Grid item  xs={12}>\n\n          <TextField\n            label=\"Starting Miles\"\n            disabled={disabled}\n            type=\"text\"\n            name=\"startMiles\"\n            value={shift.startMiles}\n            onChange={handleChange}\n            \n            />\n        </Grid>\n        <Grid item  xs={12}>\n\n        \n          <TextField\n            disabled={disabled}\n            label=\"Ending Miles\"\n            type=\"text\"\n            name=\"endMiles\"\n            value={shift.endMiles}\n            onChange={handleChange}\n            />\n        \n        </Grid>\n        \n        <Grid item  xs={12}>\n\n        \n          <TextField\n            disabled={disabled}\n            label=\"Tips\"\n            type=\"text\"\n            name=\"tips\"\n            value={shift.tips}\n            onChange={handleChange}\n            />\n        \n            </Grid>\n            \n        \n     \n      <div style={{ margin: \"10px auto\", paddingLeft: \"80px\", display: \"flex\", justifyContent: \"center\" }}>\n        <Button className={classes.buttons} color=\"secondary\" variant=\"outlined\" onClick={(e) => close()}>\n          Cancel\n        </Button>\n        <Button className={classes.buttons} color=\"primary\" variant=\"outlined\" onClick={(e) => postUpdate(shiftId, shift)}>\n          Submit\n        </Button>\n\n        </div>\n        </Grid>\n  )\n\n}\n\n\n// const StyledInput = styled.input`\n//   /* max-width: 100px; */\n//   text-align: center;\n//   background-color: white;\n// `;\n\n// const StyledLabel = styled.label`\n//   margin: 5px;\n//   text-align: center;\n//   /* background-color: lightgreen; */\n//   /* border-radius: 20px; */\n// `;\n\n// const StyledButton = styled.button`\n//   width: 100px;\n//   height: 40px;\n//   border: none;\n//   background-color: #a3f7b5;\n//   border-radius: 5px;\n//   margin: 20px 20px 20px 30px;\n//   cursor: pointer;\n//   &:hover {\n//     background-color: #b4f8c3;\n//   }\n// `;",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":16,"nodeType":"99","messageId":"100","endLine":1,"endColumn":25},{"ruleId":"97","severity":1,"message":"101","line":24,"column":23,"nodeType":"99","messageId":"100","endLine":24,"endColumn":35},{"ruleId":"97","severity":1,"message":"102","line":25,"column":21,"nodeType":"99","messageId":"100","endLine":25,"endColumn":31},{"ruleId":"97","severity":1,"message":"103","line":7,"column":8,"nodeType":"99","messageId":"100","endLine":7,"endColumn":14},{"ruleId":"97","severity":1,"message":"103","line":6,"column":8,"nodeType":"99","messageId":"100","endLine":6,"endColumn":14},{"ruleId":"97","severity":1,"message":"104","line":8,"column":10,"nodeType":"99","messageId":"100","endLine":8,"endColumn":24},{"ruleId":"97","severity":1,"message":"105","line":71,"column":12,"nodeType":"99","messageId":"100","endLine":71,"endColumn":24},{"ruleId":"106","severity":1,"message":"107","line":99,"column":1,"nodeType":"108","messageId":"109","endLine":129,"endColumn":16},{"ruleId":"97","severity":1,"message":"110","line":2,"column":24,"nodeType":"99","messageId":"100","endLine":2,"endColumn":37},{"ruleId":"97","severity":1,"message":"111","line":18,"column":10,"nodeType":"99","messageId":"100","endLine":18,"endColumn":16},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setStartDate' is assigned a value but never used.","'setEndDate' is assigned a value but never used.","'Button' is defined but never used.","'FormHelperText' is defined but never used.","'handleCancel' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'closeShiftAPI' is defined but never used.","'status' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]